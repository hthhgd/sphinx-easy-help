标题
=====

**一下为我的个人解释,不喜勿喷**

一级标题
--------

.. code-block::
   
   标题
   =====
   
划线长度自行按需增加

二级标题
--------

.. code-block::
   
   标题
   -----
   
用法同上

三级标题
--------

.. code-block::

   标题
   ^^^^^
   
用法同上
   
四级标题
--------

.. code-block::

   标题
   ~~~~~
   
用法同上
   
五级标题
--------

.. code-block::

   标题
   """""
   
用法同上

标题拓展
--------

一下为冷门标题语法,作用不大,看看就好

章节标题
^^^^^^^^

格式1
~~~~~

.. code-block::

   =====
   标题
   =====
   
官方解释为 章节的标题
个人理解: 比五级标题大比四级标题小

格式2
~~~~~

.. code-block::

   标题
   *****
   
官方解释为 章节的标题
个人理解:与上一点相同,写法不同

字体
====

*以下介绍中出现的* **" {文本} "** *表示你输入的文字*

斜体
-----

.. code-block::

   *{文本}*
   
为斜体格式,官方建议用法为强调

加粗字体
--------

.. code-block:: 

   **{文本}**
   
为加粗格式,官方建议用法为重点强调

代码字体格式
------------

.. code-block::

   ``{文本}``
   
官方说明为代码样式,个人理解: 加框的红色缩小字体,用于特殊加粗

超链接文本
----------

.. code-block:: 

   `{文本} <链接>`_
   
为{文本}添加链接

注意事项
-------

* 不能相互嵌套,
* 内容前后不能由空白: 这样写``* text*`` 是错误的,
* 如果内容需要特殊字符分隔. 使用反斜杠转义，如: thisis\ *one*\ word.

**注:** 此为官方解释,仅作抄录

注释类
======

普通注释
-------

代码注释
^^^^^^^^

.. code-block::

   .. {文本}
   
此为代码注释/文档不可见注释
如果换行,只需要增加一个缩进均视为注释内容

文档注释
^^^^^^^^

.. code-block::

   .. [#f{备注}] {文本}
   
在文档添加注释(淡灰色字体)

.. [#f] 注释里的" {备注} "输入的内容在文档里不会显示,如同此注释一样" [] " 里会自动生成序号
.. [#f] 剩下的注释序号也会自动生成," [] "和里面的序号无法删掉

声明类注释
---------

树状结构声明
^^^^^^^^^^^

.. code-block::

   .. toctree::
      :maxdepth: {数字}
      :caption: {文本}
      :numbered:
      
``.. toctree`` 为默认首页/目录文件的声明类型,仅在 ``index.rst`` 文件使用,更详细使用场景请移步至 `官方文档 <https://zh-sphinx-doc.readthedocs.io>`_
``:maxdepth:`` 为 ``.. toctree`` 的子项,用于声明此树状结构的级数,通过修改" {数字} "进行修改,如果无法理解可以让他默认 ``2`` 即可,无需修改或者阅读 `官方文档 <https://zh-sphinx-doc.readthedocs.io>`_
``:caption:`` 用于设置该文件的标题,如无需设置删掉即可
``:numbered:`` 让文档自动为你给文档目录添加序号,我认为此为无用/不常用功能,知道即可

* 如需添加新文档文件仅需在 ``.. toctree`` 下添加文件名即可,例如我需要添加文件 ``api.rst``如下

.. code-block::

   .. toctree::
      :maxdepth: {数字}
      :caption: {文本}
      :numbered:
      
      api
      
其他文件同理

官方解释
^^^^^^^^

.. code-block::
   
   toctree 是 reStructuredText的 directive （指令）, 一种用途十分广泛的块标记. 定义了参数、选项及目录.
   Arguments 直接在双冒号后面给出指令的名字. 每个指令都有不定个数的参数.
   Options 在参数后以”字段列表”的形式给出. 如 maxdepth 是 toctree 指令的选项之一.
   Content 具体内容,在选项或参数的后面，隔开一个空行. 每个指令后面都跟着不同作用的内容.
   共同的约定是 内容与选项一般有相同的缩进 .

声明文本/代码块
^^^^^^^^^^^^^^

.. code-block::

   .. code-block:: {文本语言/类型}
         
       {文本}
       
为代码/文本添加文本框,或显示{文本语言/类型}里设置的编程语言的代码格式

.. [#f] 文本框里的文本不会自动换行,请自行换行

插图
^^^^

.. code-block::

   .. image:: {文件地址}
   
插入一张图片

表格
====

注释类表格
---------

.. code-block::

   .. list-table:: 声明一个表格
	   :header-rows: 1 设置标题行数(效果就是有几行是亮白色,普通行是淡灰色,默认填1就行)
	
	   * - 选项1   
	     - 选项2   
	     - 选项3   
   	* - 内容1   
     	  - 内容2
   	  - 内容3
	   * - 内容4
   	  - 内容5
	     - 内容6

一个*号代表一行内容,内容长度/数量不限,下面同理
此种表格写法每一行的每一个选项都必须有内容
有一行的选项对不上都将无法显示

图形表格

.. code-block::

   +-------+-------+-------+-------+
   | 标题1 | 标题2 | 标题3 | 标题4 |
   +=======+=======+=======+=======+  
   | 内容6 | 内容6 | 内容6 | 内容6 |
   +-------+-------+-------+-------+  
   | 内容6 | ...   | ...   |       |
   +-------+-------+-------+-------+  
   
用===线区分标题和内容部分,其余使用---线
此表格相比上面的表格优点是允许有空白格
符号与符号之间的距离一定要相等,不然无法解析
但更推荐上面的表格,因为制作速度更快

简单表格
-------

.. code-block::

   =====  =====  ======= 
   A      B      A and B
   =====  =====  =======  
   False  False  False
   True   False  False    
   False  True   False
   True   True   True
   =====  =====  =======

 和第一种要求一样,但此表格更适合编辑时查看表格内容
 因为麻烦此处直接复制了官方的英语表格演示
 表格也是使用了===线来做标题和内容的区分方式,但上下均需要使用===线来表示此为一个表格
 
 列表
 ====
 
 普通列表
 --------
 
.. code-block::
 
   术语 (term 文本开头行  此为官方文档摘抄
      定义术语，必须缩进

      可以有多段组成

   下一术语（term）
      描述.
      
此为官方例子

序号列表
-------

.. code-block::

   * 这是一个项目符号列表.  
   * 它有两项，
       第二项使用两行.

   1. 这是个有序列表.
   2. 也有两项.

   #. 是个有序列表.
   #. 也有两项.

此为官方文档摘抄

带点的列表类型
-------------

.. code-block::

   * 这是
   * 一个列表

     * 嵌套列表
     * 子项

   * 父列表继续
   
此为官方文档摘抄
可自行测试效果

后记
====

这些内容足以胜任大多数文档的编写,如需更深入了解 `sphinx <https://zh-sphinx-doc.rtfd.io/en/latest/rest.html>`_ 的语法格式请查看官方文档
此教程仅为小群体里使用,专业人士请勿喷,感谢理解
